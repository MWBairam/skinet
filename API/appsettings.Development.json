{

  "ConnectionStrings": {
    "_Comment4": "old DB connection strings were //Data source=skinet.db //Data source=identity.db which are file-based db in API folder powered by sqlite during development.",
    "_Comment5": "Now we have downloaded postgres on docker container (whether on my laptop windows 10 or publishin linux machine) so we should write the new string. and note that the container in both cases is accessable through loaclhost:<container_port>",
    "_Comment6:": "the username and password are the same in docker-compose.yml when we first created the docker containers",
    "DefaultConnection" : "Server=localhost; Port=5432;User Id=appuser; Password=secret; Database=skinet",
    "IdentityConnection" : "Server=localhost; Port=5432;User Id=appuser; Password=secret; Database=identity",
    "_Comment6": "for redis, whether we are using redis directly installed on my laptop windoes 10, or redis docker container on my laptop windows 10 docker engine, or redis docker container on the publishing server linux machine docker engine, the connection string is always localhost only or localhost:<redis_container_port>",
    "Redis": "localhost",
    "_Comment7":"we do not care if those are visible in github, becuase we are not using this file in production env, and because what i have explianed in _Comment1,2,3 in appsettings.json"
  },

  "Logging": {
    "LogLevel": {
      "Default": "Information",
      "Microsoft": "Information",
      "Microsoft.Hosting.Lifetime": "Information"
    }
  },

  "Token":{
    "Key": "super secret key super secret key super secret key",
    "Issuer": "https://localhost:5001"
  },


  "_comment1": "the following ApiUrl is used in the ProductUrlResolver class in the Helper folder in the API project",
  "_comment2": "at first, it was https://localhost:5001/ only",
  "_comment3": "but due to the problem explained in startup.cs file, in app.UseEndpoints middleware at the bottom of the file, we added /Content to it:",
  "ApiUrl" : "https://localhost:5001/Content/"

  
}
